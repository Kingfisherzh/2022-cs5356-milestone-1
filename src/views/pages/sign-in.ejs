<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav', { hideSignIn: true }) %>
  </header>


  <form id="login-form">
    <input type="text" name="login" placeholder="Your user name" />
    <input type="password" name="password" id="password" />
    <button>
      Sign In
    </button>
    <div id="login-error">

    </div>
    </div>
  </form>
</body>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>
  window.onload = () => {
    console.log('Running onload')

    const postUserId = async function (url, idTokenUser) {
      const response = await fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          idTokenUser
        }),
      });
      // return response;
    };

    const firebaseConfig = {
      // CS5356 TODO #2
      // Create your own Firebase project. See the assignment for
      // where you can get the Firebase config
      apiKey: "AIzaSyDASRp8Dm1ltPw3bz1y2xbAZOMUoHKMepk",
      authDomain: "milestone1-ed697.firebaseapp.com",
      projectId: "milestone1-ed697",
      storageBucket: "milestone1-ed697.appspot.com",
      messagingSenderId: "596551865727",
      appId: "1:596551865727:web:ba570f4f3c9c229860764a",
      measurementId: "G-1C4NK441XL"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Sign in using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard 
        // try{
        //   const user = await app.auth().createUserWithEmailAndPassword(login, password)
        //   const idToken = await user.getIdToken()
        //   await postUserId("/sessionLogin", idToken)
        //   window.location.assign("/dashboard")
        // }catch(err){
        //   console.error(err)
        // }
        app.auth().signInWithEmailAndPassword(login, password)
          .then((userCredential) => {
            // Signed in 
            const user = userCredential.user;
            user.getIdToken().then((idToken) => {
              fetch("/sessionLogin", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify({
                    idToken
                  })
                })
                .then((ResponseBody) => {
                  window.location.assign('/dashboard')
                })
                .catch((error) => {
                  debugger
                })
            })
          }).catch((error) => {
            const errorCode = error.code
            const errorMsg = error.message
          });
      });

  }
</script>
</html>