<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <%- include('../partials/nav') %>
  </header>

  <div class="container">
    Sign Up for a new account or <a href="/sign-in">click here to sign in with an existing account</a>
    <form id="login-form">
      <label>Login</label>
      <input id="login" type="text" name="login" />
      <label>Password</label>
      <input type="password" name="password" />
      <button>Log in</button>
    </form>
    <div id="login-error" style="display: none;">
    </div>
    <a href="/dashboard">Dashboard</a>
  </div>
</body>

<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>

<script>
  window.onload = () => {
    console.log('Running onload')
    const firebaseConfig = {
      // CS5356 TODO #2
      // Copy your Firebase config here too
      apiKey: "AIzaSyDASRp8Dm1ltPw3bz1y2xbAZOMUoHKMepk",
      authDomain: "milestone1-ed697.firebaseapp.com",
      projectId: "milestone1-ed697",
      storageBucket: "milestone1-ed697.appspot.com",
      messagingSenderId: "596551865727",
      appId: "1:596551865727:web:ba570f4f3c9c229860764a",
      measurementId: "G-1C4NK441XL"
    }


    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Create a new user using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard
        // try{
        //   const user = await app.auth().createUserWithEmailAndPassword(login, password)
        //   const idToken = await user.getIdToken()
        //   await postUserId("/sessionLogin", idToken)
        //   window.location.assign("/dashboard")
        // }catch(err){
        //   console.error(err)
        //S};

        app.auth().createUserWithEmailAndPassword(login, password)
          .then((userCredential) => {
            // Signed in 
            const user = userCredential.user;
            user.getIdToken().then((idToken) => {
              fetch("/sessionLogin", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify({
                    idToken
                  })
                })
                .then((ResponseBody) => {
                  window.location.assign('/dashboard')
                })
                .catch((error) => {
                  debugger
                })
            })
          }).catch((error) => {
            const errorCode = error.code
            const errorMsg = error.message
          });
      });
  };
</script>

</html>